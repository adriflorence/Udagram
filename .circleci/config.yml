# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1
  browser-tools: circleci/browser-tools@1.1.3
  aws-cli: circleci/aws-cli@1.3.1
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@1.0.2

jobs:
  build:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:15.0.1-browsers
    # CircleCI will report the results back to your VCS provider.
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - checkout
      - run:
          name: Backend - Install Dependencies
          command: npm run backend:install
      - run:
          name: Backend - Build
          command: npm run backend:build
      - run:
          name: Backend - Deploy
          command: npm run backend:deploy
      - run:
          name: Frontend - Install Dependencies
          command: npm run frontend:install
      - run:
          name: Frontend - Build
          command: npm run frontend:build
      - run:
          name: Frontend - Run Tests
          command: npm run frontend:test

    

workflows:
  # CircleCI will run this workflow on every commit.
  # Configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  udagram:
    jobs:
      - build